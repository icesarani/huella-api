openapi: 3.1.0
info:
  title: Huella Rural API
  description: Huella Rural API
  version: 0.0.1
  contact:
    name: Huella Rural
    email: icesarani@uade.edu.ar
servers:
  - url: http://localhost:3000
security:
  - cookieAuth: []
  - bearerAuth: []
tags:
  - name: Auth
    description: Endpoints for user authentication.
  - name: Certification Requests
    description: Endpoints for managing certification requests.
  - name: Users
    description: Endpoints for managing users.
  - name: Localities
    description: Endpoints for managing localities.
paths:
  /api/v1/sessions:
    post:
      summary: Creates a new session.
      description: Creates a new session for the user.
      operationId: createSession
      tags: [Auth]
      requestBody:
        description: Viewer credentials for authentication.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                      description: The user's email address.
                      example: jdoe@gmail.com
                    password:
                      type: string
                      format: password
                      description: The user's password.
                      example: securePassword123
                  required:
                    - email
                    - password
              required:
                - user
      responses:
        '200':
          description: Successfully authenticated. The session token is sent as a cookie and JWT token in Authorization header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Invalid email or password.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Deletes the current session.
      description: Deletes the current session for the user.
      operationId: deleteSession
      tags: [Auth]
      responses:
        '204':
          description: Successfully deleted the session.
        "401":
          description: Invalid session.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/registrations:
    post:
      summary: Creates a new user registration.
      description: Creates a new user account and returns the user information.
      operationId: createRegistration
      tags: [Auth]
      requestBody:
        description: User registration data.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                      description: The user's email address.
                      example: jdoe@gmail.com
                    password:
                      type: string
                      format: password
                      description: The user's password.
                      example: securePassword123
                    producer_profile_attributes:
                      $ref: '#/components/schemas/ProducerProfileAttributes'
                    vet_profile_attributes:
                      $ref: '#/components/schemas/VetProfileAttributes'
                  required:
                    - email
                    - password
              required:
                - user
      responses:
        '200':
          description: Successfully created user account. JWT token included in Authorization header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/certification_requests:
    post:
      summary: Creates a new certification request.
      description: Creates a new certification request with required file upload and automatic veterinarian assignment.
      operationId: createCertificationRequest
      tags: [Certification Requests]
      security:
        - bearerAuth: []
      requestBody:
        description: Certification request data with required file upload.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                certification_request:
                  $ref: '#/components/schemas/CertificationRequestInput'
              required:
                - certification_request
      responses:
        '201':
          description: Successfully created certification request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificationRequestCreate'
        '401':
          description: Unauthorized - user not authenticated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - user is not a producer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation errors or veterinarian assignment failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/viewer:
    get:
      summary: Retrieves the current authenticated user's information.
      description: Retrieves the current authenticated user's information, including profile details.
      operationId: getViewer
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved user information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized - user not authenticated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/localities:
    get:
      summary: Retrieves a list of all localities.
      description: Retrieves a list of all localities ordered by name.
      operationId: listLocalities
      tags: [Localities]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved list of localities.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Locality'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: _huella_api_session
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the user.
          example: 1
        email:
          type: string
          format: email
          description: The user's email address.
          example: "icesarani@uade.edu.ar"
        producer_profile:
          $ref: '#/components/schemas/ProducerProfile'
          description: Producer profile information (if user is a producer)
        vet_profile:
          $ref: '#/components/schemas/VetProfile'
          description: Vet profile information (if user is a vet)
    ProducerProfile:
      type: object
      properties:
        id:
          type: integer
          description: Profile identifier
          example: 1
        name:
          type: string
          description: Producer name
          example: "Juan Pérez"
        cuig_number:
          type: string
          description: CUIG number
          example: "CUIG123456"
        renspa_number:
          type: string
          description: RENSPA number
          example: "RENSPA12345"
        identity_card:
          type: string
          description: Identity card number
          example: "12345678"
        created_at:
          type: string
          format: date-time
          description: Profile creation timestamp
          example: "2024-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          description: Profile last update timestamp
          example: "2024-01-15T10:30:00Z"
    VetProfile:
      type: object
      properties:
        id:
          type: integer
          description: Profile identifier
          example: 1
        first_name:
          type: string
          description: Veterinarian first name
          example: "María"
        last_name:
          type: string
          description: Veterinarian last name
          example: "González"
        full_name:
          type: string
          description: Veterinarian full name
          example: "María González"
        license_number:
          type: string
          description: Veterinarian license number
          example: "LIC123456"
        identity_card:
          type: string
          description: Identity card number
          example: "87654321"
        created_at:
          type: string
          format: date-time
          description: Profile creation timestamp
          example: "2024-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          description: Profile last update timestamp
          example: "2024-01-15T10:30:00Z"
        localities:
          type: array
          description: Localities where the vet provides services
          items:
            $ref: '#/components/schemas/Locality'
    ProducerProfileAttributes:
      type: object
      properties:
        name:
          type: string
          description: Producer name
          example: "Juan Pérez"
        cuig_number:
          type: string
          description: CUIG number
          example: "CUIG123456"
        renspa_number:
          type: string
          description: RENSPA number
          example: "RENSPA12345"
        identity_card:
          type: string
          description: Identity card number
          example: "12345678"
      required:
        - name
        - cuig_number
        - renspa_number
        - identity_card
    VetProfileAttributes:
      type: object
      properties:
        first_name:
          type: string
          description: Veterinarian first name
          example: "María"
        last_name:
          type: string
          description: Veterinarian last name
          example: "González"
        license_number:
          type: string
          description: Veterinarian license number
          example: "LIC123456"
        identity_card:
          type: string
          description: Identity card number
          example: "87654321"
        vet_service_areas_attributes:
          type: array
          description: Optional array of service areas for the veterinarian
          items:
            $ref: '#/components/schemas/VetServiceAreaAttributes'
          example:
            - locality_id: 1
            - locality_id: 2
        vet_work_schedule_attributes:
          $ref: '#/components/schemas/VetWorkScheduleAttributes'
          description: Optional work schedule for the veterinarian
      required:
        - first_name
        - last_name
        - license_number
        - identity_card
    VetServiceAreaAttributes:
      type: object
      properties:
        locality_id:
          type: integer
          description: The ID of the locality where the veterinarian provides services
          example: 1
      required:
        - locality_id
    VetWorkScheduleAttributes:
      type: object
      properties:
        monday:
          type: string
          enum: [none, morning, afternoon, both]
          description: Work schedule for Monday
          example: "morning"
          default: "none"
        tuesday:
          type: string
          enum: [none, morning, afternoon, both]
          description: Work schedule for Tuesday
          example: "both"
          default: "none"
        wednesday:
          type: string
          enum: [none, morning, afternoon, both]
          description: Work schedule for Wednesday
          example: "afternoon"
          default: "none"
        thursday:
          type: string
          enum: [none, morning, afternoon, both]
          description: Work schedule for Thursday
          example: "none"
          default: "none"
        friday:
          type: string
          enum: [none, morning, afternoon, both]
          description: Work schedule for Friday
          example: "both"
          default: "none"
        saturday:
          type: string
          enum: [none, morning, afternoon, both]
          description: Work schedule for Saturday
          example: "morning"
          default: "none"
        sunday:
          type: string
          enum: [none, morning, afternoon, both]
          description: Work schedule for Sunday
          example: "none"
          default: "none"
    Locality:
      type: object
      properties:
        id:
          type: integer
          description: Locality identifier
          example: 1
        name:
          type: string
          description: Locality name
          example: "Buenos Aires"
        province_id:
          type: integer
          description: Province identifier
          example: 1
    CertificationRequestInput:
      type: object
      properties:
        address:
          type: string
          description: Farm address
          example: "Farm Address 123"
        locality_id:
          type: integer
          description: Locality identifier
          example: 1
        intended_animal_group:
          type: integer
          description: Number of animals in the group
          example: 50
        declared_lot_weight:
          type: integer
          description: Declared weight of the lot in kg
          minimum: 1
          maximum: 2000
          example: 450
        declared_lot_age:
          type: integer
          description: Declared age of the lot in months
          minimum: 1
          maximum: 240
          example: 24
        cattle_breed:
          type: string
          enum: [angus, hereford, brahman, charolais, limousin, simmental, holstein, jersey, shorthorn, other]
          description: Cattle breed
          example: "angus"
        preferred_time_range_start:
          type: string
          format: date-time
          description: Preferred start time for certification
          example: "2024-12-02T09:00:00-03:00"
        preferred_time_range_end:
          type: string
          format: date-time
          description: Preferred end time for certification
          example: "2024-12-02T17:00:00-03:00"
        file:
          type: string
          format: binary
          description: Required image file (JPEG/PNG only)
      required:
        - address
        - locality_id
        - intended_animal_group
        - declared_lot_weight
        - declared_lot_age
        - cattle_breed
        - preferred_time_range_start
        - preferred_time_range_end
        - file
    CertificationRequestCreate:
      type: object
      properties:
        certification_request:
          $ref: '#/components/schemas/CertificationRequest'
    CertificationRequest:
      type: object
      properties:
        id:
          type: integer
          description: Certification request identifier
          example: 1
        address:
          type: string
          description: Farm address
          example: "Farm Address 123"
        intended_animal_group:
          type: integer
          description: Number of animals in the group
          example: 50
        declared_lot_weight:
          type: integer
          description: Declared weight in kg
          example: 450
        declared_lot_age:
          type: integer
          description: Declared age in months
          example: 24
        cattle_breed:
          type: string
          description: Cattle breed
          example: "angus"
        preferred_time_range:
          type: string
          description: Preferred time range for certification
          example: "[2024-12-02 09:00:00 -0300,2024-12-02 17:00:00 -0300)"
        scheduled_date:
          oneOf:
            - type: 'null'
            - type: string
          format: date
          description: Scheduled date for certification
          example: "2024-12-02"
        scheduled_time:
          oneOf:
            - type: 'null'
            - type: string
              enum: [morning, afternoon]
          description: Scheduled time slot
          example: "morning"
        status:
          type: string
          enum: [created, assigned, executed, canceled, rejected]
          description: Request status
          example: "assigned"
        locality:
          $ref: '#/components/schemas/Locality'
        producer_profile:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: "Farm Producer Ltd"
            cuig_number:
              type: string
              example: "CUIG123456"
        vet_profile:
          oneOf:
            - type: 'null'
            - type: object
          properties:
            id:
              type: integer
              example: 1
            first_name:
              type: string
              example: "Dr. Maria"
            last_name:
              type: string
              example: "Garcia"
            license_number:
              type: string
              example: "LIC123456"
        file_upload:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/AiAnalyzedFileUpload'
        created_at:
          type: string
          format: date-time
          example: "2024-12-02T09:30:00-03:00"
        updated_at:
          type: string
          format: date-time
          example: "2024-12-02T10:30:00-03:00"
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
          example: "Validation failed"
        code:
          type: string
          description: Error code
          example: "unprocessable_entity"
    AiAnalyzedFileUpload:
      type: object
      properties:
        id:
          type: integer
          example: 1
        ai_analyzed_age:
          type: string
          example: "2.3 years"
        ai_analyzed_weight:
          type: string
          example: "485 kg"
        ai_analyzed_breed:
          type: string
          example: "Angus"
        processed_at:
          type: string
          format: date-time
          example: "2024-12-02T10:30:00-03:00"
